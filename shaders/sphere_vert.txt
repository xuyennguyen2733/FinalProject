#version 330 core

layout(location=0) in vec3 pos;
layout(location=1) in vec2 txc;
layout(location=2) in vec3 norm;

uniform mat4 mvp;
uniform mat4 mv;
uniform mat3 mn;
uniform vec3 light;
uniform float texCoordDisp;
uniform float sinTheta;
uniform float waveScale;
uniform sampler2D depthMap;

out vec3 norms;
out vec4 position;
out vec2 texCoord;
out vec3 lightDir;
out mat3 matn;
out vec4 view;

void main()
{
	vec4 worldPos = mvp * vec4(pos,1);
	vec2 tex = txc;
	tex -= texCoordDisp*0.01;
	float displacement = texture(depthMap, tex).r;
  if(displacement < 0.355)
  {
     displacement = 0;
  }
  //displacement *= sinTheta;
	vec3 n = normalize(mn*norm);
	//n *= displacement;
  //worldPos += vec4(n,0);
	gl_Position = worldPos;
	position = vec4(pos,1.0);
	texCoord = tex;
	lightDir = light;
	matn = mn;
	norms = norm;
	view = mv * vec4(pos,1.0);
}