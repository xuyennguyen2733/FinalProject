#version 410 core

layout(vertices = 4) out;

in vec3 norms[];
in vec2 texCoord[];
//in float layers[];
//in mat3 matrixNormal[];
//in vec3 view[];

out vec3 norm[];
out vec2 txc[];
//out vec3 worldView[];
//out mat3 mn[];

void main()
{
	/*gl_TessLevelOuter[0] = layers[0];
	gl_TessLevelOuter[1] = layers[0];
	gl_TessLevelOuter[2] = layers[0];
	gl_TessLevelOuter[3] = layers[0];

	gl_TessLevelInner[0] = layers[0];
	gl_TessLevelInner[1] = layers[0];*/

	gl_TessLevelOuter[0] = 1.0f;
	gl_TessLevelOuter[1] = 1.0f;
	gl_TessLevelOuter[2] = 1.0f;
	gl_TessLevelOuter[3] = 1.0f;

	gl_TessLevelInner[0] = 1.0f;
	gl_TessLevelInner[1] = 1.0f;
	
	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
	
	txc[gl_InvocationID] = texCoord[gl_InvocationID];
	//worldView[gl_InvocationID] = view[gl_InvocationID];
	norm[gl_InvocationID] = norms[gl_InvocationID];
	//mn[gl_InvocationID] = matrixNormal[gl_InvocationID];
}