#version 330 core

layout(location=0) out vec4 color;

uniform sampler2D textureID;

in vec3 position;
in vec2 texCoord;
in vec3 lightDir;
in mat3 matn;
in vec3 norms;
in vec4 view;

void main() 
{
	vec4 I = vec4(1.0,1.0,1.0,1.0);
	vec3 l = normalize(lightDir);
	vec3 n = normalize(matn * norms);
	vec3 v = -normalize(vec3(view));
	vec3 h = normalize(l+v);

	float theta = max(dot(l,n),0.0);
	float phi = pow(max(dot(n,h),0.0),10.0);

	vec4 Kd = texture(textureID, texCoord);
	vec4 Ks = vec4(0.5,0.5,0.5,1.0);

	vec4 ambient = vec4(vec3(0.3,0.3,0.3) * Kd.rgb,1.0);
	vec4 specular = Ks * phi;
	vec4 diffuse = Kd * theta;

	color = diffuse + ambient + specular;
}